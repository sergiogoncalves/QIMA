{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/category.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ProductFormComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r1.name);\n  }\n}\nclass ProductFormComponent {\n  constructor(categoryService) {\n    this.categoryService = categoryService;\n    this.categories = [];\n  }\n  ngOnInit() {\n    this.getCategories();\n  }\n  getCategories() {\n    this.categoryService.getCategories().subscribe(categories => this.categories = categories);\n  }\n}\nProductFormComponent.ɵfac = function ProductFormComponent_Factory(t) {\n  return new (t || ProductFormComponent)(i0.ɵɵdirectiveInject(i1.CategoryService));\n};\nProductFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductFormComponent,\n  selectors: [[\"app-product-form\"]],\n  inputs: {\n    product: \"product\"\n  },\n  decls: 8,\n  vars: 5,\n  consts: [[\"placeholder\", \"Name\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Description\", 3, \"ngModel\", \"ngModelChange\"], [\"placeholder\", \"Price\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\"], [3, \"value\"]],\n  template: function ProductFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\")(1, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductFormComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.product.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductFormComponent_Template_input_ngModelChange_2_listener($event) {\n        return ctx.product.description = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductFormComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.product.price = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function ProductFormComponent_Template_select_ngModelChange_4_listener($event) {\n        return ctx.product.category = $event;\n      });\n      i0.ɵɵtemplate(5, ProductFormComponent_option_5_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 5);\n      i0.ɵɵtext(7, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.product.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.product.description);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.product.price);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.product.category);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ProductFormComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","category_r1","ɵɵadvance","ɵɵtextInterpolate","name","ProductFormComponent","constructor","categoryService","categories","ngOnInit","getCategories","subscribe","ɵɵdirectiveInject","i1","CategoryService","selectors","inputs","product","decls","vars","consts","template","ProductFormComponent_Template","rf","ctx","ɵɵlistener","ProductFormComponent_Template_input_ngModelChange_1_listener","$event","ProductFormComponent_Template_input_ngModelChange_2_listener","description","ProductFormComponent_Template_input_ngModelChange_3_listener","price","ProductFormComponent_Template_select_ngModelChange_4_listener","category","ɵɵtemplate","ProductFormComponent_option_5_Template"],"sources":["C:\\Projetos\\QIMA_FE\\src\\app\\components\\product-form\\product-form.component.ts","C:\\Projetos\\QIMA_FE\\src\\app\\components\\product-form\\product-form.component.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\nimport {Product} from \"../../model/product.model\";\nimport {Category} from \"../../model/category.model\";\nimport {CategoryService} from \"../../service/category.service\";\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.scss']\n})\nexport class ProductFormComponent {\n  @Input() product: Product;\n\n  categories: Category[] = [];\n\n\n  constructor(private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.getCategories();\n  }\n\n  getCategories(): void {\n    this.categoryService.getCategories().subscribe(categories => this.categories = categories);\n  }\n}\n","<form>\n    <!-- Add form fields for the product properties -->\n    <input [(ngModel)]=\"product.name\" placeholder=\"Name\">\n    <input [(ngModel)]=\"product.description\" placeholder=\"Description\">\n    <input [(ngModel)]=\"product.price\" placeholder=\"Price\">\n    <select [(ngModel)]=\"product.category\">\n        <option *ngFor=\"let category of categories\" [value]=\"category\">{{category.name}}</option>\n    </select>\n    <!-- Add other fields as needed -->\n    <button type=\"submit\">Submit</button>\n</form>"],"mappings":";;;;;;ICMQA,EAAA,CAAAC,cAAA,gBAA+D;IAAAD,EAAA,CAAAE,MAAA,GAAiB;IAAAF,EAAA,CAAAG,YAAA,EAAS;;;;IAA7CH,EAAA,CAAAI,UAAA,UAAAC,WAAA,CAAkB;IAACL,EAAA,CAAAM,SAAA,GAAiB;IAAjBN,EAAA,CAAAO,iBAAA,CAAAF,WAAA,CAAAG,IAAA,CAAiB;;;ADDxF,MAKaC,oBAAoB;EAM/BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAHnC,KAAAC,UAAU,GAAe,EAAE;EAG6B;EAExDC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAaA,CAAA;IACX,IAAI,CAACH,eAAe,CAACG,aAAa,EAAE,CAACC,SAAS,CAACH,UAAU,IAAI,IAAI,CAACA,UAAU,GAAGA,UAAU,CAAC;EAC5F;;AAdWH,oBAAoB,C;mBAApBA,oBAAoB,EAAAT,EAAA,CAAAgB,iBAAA,CAAAC,EAAA,CAAAC,eAAA;AAAA;AAApBT,oBAAoB,C;QAApBA,oBAAoB;EAAAU,SAAA;EAAAC,MAAA;IAAAC,OAAA;EAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVjC3B,EAAA,CAAAC,cAAA,WAAM;MAEKD,EAAA,CAAA6B,UAAA,2BAAAC,6DAAAC,MAAA;QAAA,OAAAH,GAAA,CAAAP,OAAA,CAAAb,IAAA,GAAAuB,MAAA;MAAA,EAA0B;MAAjC/B,EAAA,CAAAG,YAAA,EAAqD;MACrDH,EAAA,CAAAC,cAAA,eAAmE;MAA5DD,EAAA,CAAA6B,UAAA,2BAAAG,6DAAAD,MAAA;QAAA,OAAAH,GAAA,CAAAP,OAAA,CAAAY,WAAA,GAAAF,MAAA;MAAA,EAAiC;MAAxC/B,EAAA,CAAAG,YAAA,EAAmE;MACnEH,EAAA,CAAAC,cAAA,eAAuD;MAAhDD,EAAA,CAAA6B,UAAA,2BAAAK,6DAAAH,MAAA;QAAA,OAAAH,GAAA,CAAAP,OAAA,CAAAc,KAAA,GAAAJ,MAAA;MAAA,EAA2B;MAAlC/B,EAAA,CAAAG,YAAA,EAAuD;MACvDH,EAAA,CAAAC,cAAA,gBAAuC;MAA/BD,EAAA,CAAA6B,UAAA,2BAAAO,8DAAAL,MAAA;QAAA,OAAAH,GAAA,CAAAP,OAAA,CAAAgB,QAAA,GAAAN,MAAA;MAAA,EAA8B;MAClC/B,EAAA,CAAAsC,UAAA,IAAAC,sCAAA,oBAAyF;MAC7FvC,EAAA,CAAAG,YAAA,EAAS;MAETH,EAAA,CAAAC,cAAA,gBAAsB;MAAAD,EAAA,CAAAE,MAAA,aAAM;MAAAF,EAAA,CAAAG,YAAA,EAAS;;;MAP9BH,EAAA,CAAAM,SAAA,GAA0B;MAA1BN,EAAA,CAAAI,UAAA,YAAAwB,GAAA,CAAAP,OAAA,CAAAb,IAAA,CAA0B;MAC1BR,EAAA,CAAAM,SAAA,GAAiC;MAAjCN,EAAA,CAAAI,UAAA,YAAAwB,GAAA,CAAAP,OAAA,CAAAY,WAAA,CAAiC;MACjCjC,EAAA,CAAAM,SAAA,GAA2B;MAA3BN,EAAA,CAAAI,UAAA,YAAAwB,GAAA,CAAAP,OAAA,CAAAc,KAAA,CAA2B;MAC1BnC,EAAA,CAAAM,SAAA,GAA8B;MAA9BN,EAAA,CAAAI,UAAA,YAAAwB,GAAA,CAAAP,OAAA,CAAAgB,QAAA,CAA8B;MACLrC,EAAA,CAAAM,SAAA,GAAa;MAAbN,EAAA,CAAAI,UAAA,YAAAwB,GAAA,CAAAhB,UAAA,CAAa;;;;;;SDIrCH,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}