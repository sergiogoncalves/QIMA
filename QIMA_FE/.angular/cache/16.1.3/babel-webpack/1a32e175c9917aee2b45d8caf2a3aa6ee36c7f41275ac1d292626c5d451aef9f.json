{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass JwtInterceptor {\n  intercept(request, next) {\n    let jwtToken = localStorage.getItem('JWT');\n    if (jwtToken) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${jwtToken}`\n        }\n      });\n    }\n    return next.handle(request);\n  }\n}\nJwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n  return new (t || JwtInterceptor)();\n};\nJwtInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: JwtInterceptor,\n  factory: JwtInterceptor.ɵfac\n});\nexport { JwtInterceptor };","map":{"version":3,"names":["JwtInterceptor","intercept","request","next","jwtToken","localStorage","getItem","clone","setHeaders","Authorization","handle","factory","ɵfac"],"sources":["C:\\Projetos\\Client FE\\src\\app\\service\\jwt.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n\r\n    let jwtToken = localStorage.getItem('JWT');\r\n\r\n    if (jwtToken) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${jwtToken}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}"],"mappings":";AAGA,MACaA,cAAc;EAEzBC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IAEpD,IAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IAE1C,IAAIF,QAAQ,EAAE;MACZF,OAAO,GAAGA,OAAO,CAACK,KAAK,CAAC;QACtBC,UAAU,EAAE;UACVC,aAAa,EAAE,UAAUL,QAAQ;;OAEpC,CAAC;;IAGJ,OAAOD,IAAI,CAACO,MAAM,CAACR,OAAO,CAAC;EAC7B;;AAfWF,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;SAAdA,cAAc;EAAAW,OAAA,EAAdX,cAAc,CAAAY;AAAA;SAAdZ,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}